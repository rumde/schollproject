"""
Django settings for facility_mgn project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from django.contrib.messages import constants as messages
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = os.path.dirname(BASE_DIR)

ALLOWED_HOSTS = ["127.0.0.1", "localhost",]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.humanize",
    "django.forms",
    # local apps
    # "core",
    "accounts",
    "facility",
    # "errorHandler",
    # "core.location",
    # third party
    "corsheaders",
    "django_extensions",
    "rest_framework",
    "rest_framework.authtoken",
    "crispy_forms",
    "django_countries",
    "import_export",
    "ckeditor",
    "ckeditor_uploader",
    # "storages",
    # "taggit",
    "simple_history",
    "debug_toolbar"
]

FORM_RENDERER = "django.forms.renderers.TemplatesSetting"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.admindocs.middleware.XViewMiddleware",
    "simple_history.middleware.HistoryRequestMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]


ROOT_URLCONF = 'facility_mgn.urls'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(PROJECT_ROOT, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                # "core.core_context.UniversalContext",
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = 'facility_mgn.wsgi.application'

AUTH_USER_MODEL = 'accounts.User'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Lagos"
USE_I18N = True
USE_L10N = True
USE_TZ = True
# USE_THOUSAND_SEPARATOR = True

# Custom Config

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DATA_UPLOAD_MAX_NUMBER_FIELDS = 102400
#  Mail sending
SERVER_EMAIL = "hello@infogridnews.com.ng"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "mail.infogridnews.com.ng"
EMAIL_USE_SSL = True
EMAIL_PORT = 465
EMAIL_HOST_USER = SERVER_EMAIL
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_PASS", "aNtBXaE/2aFBJMEC")
DEFAULT_FROM_EMAIL = "Sadaqa Foundation <hello@infogridnews.com.ng>"
SITE_ID = 1
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
APPEND_SLASH = True
IMPORT_EXPORT_USE_TRANSACTIONS = True
# CRISPY FORMS
CRISPY_TEMPLATE_PACK = "bootstrap4"
# CRISPY_TEMPLATE_PACK = 'uni_form'
CKEDITOR_UPLOAD_PATH = "uploads/ck/"
X_FRAME_OPTIONS = "SAMEORIGIN"
COUNTRIES_FIRST_REPEAT = ["Nigeria"]
# SIMPLE_HISTORY_REVERT_DISABLED = True
# SIMPLE_HISTORY_HISTORY_CHANGE_REASON_USE_TEXT_FIELD = True


MESSAGE_TAGS = {
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}


LOG_PATH = os.path.join(PROJECT_ROOT, "logs/")
if not os.path.isdir(LOG_PATH):
    print(f"Creating Log Directory: {LOG_PATH}")
    os.mkdir(LOG_PATH)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "standard": {"format": "%(asctime)s [%(levelname)s]- %(message)s"}
        # format='%(asctime)-15s %(name)-5s %(levelname)-8s IP: %(ip)-15s User: %(user)-8s %(message)s')
    },
    "handlers": {
        "django_error": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": LOG_PATH + "error.log",
            "formatter": "standard",
        },
        "info": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": LOG_PATH + "info.log",
            "formatter": "standard",
        },
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "standard",
        },
        "mail_admins": {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
            "email_backend": "django.core.mail.backends.filebased.EmailBackend",
        },
    },
    "loggers": {
        "info": {"handlers": ["info", "console"], "level": "DEBUG", "propagate": True},
        "django": {"handlers": ["info", "console"], "level": "INFO", "propagate": True},
        "django.request": {
            "handlers": ["django_error", "console", "info"],
            "level": "DEBUG",
            "propagate": True,
        },
        "django.db.backends": {
            "handlers": ["django_error", "console", "mail_admins"],
            "level": "ERROR",
            "propagate": True,
        },
    },
}


