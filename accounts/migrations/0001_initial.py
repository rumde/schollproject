# Generated by Django 4.1.3 on 2022-11-03 09:33

import accounts.managers
import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=30, verbose_name="first name"),
                ),
                (
                    "other_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="other name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="last name"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("staff", "Staff"),
                            ("admin", "Admin"),
                            ("super_admin", "Super Admin"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("others", "Others"),
                        ],
                        default="others",
                        max_length=15,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics"),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, null=True
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("zip_code", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="active"),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ("-updated",),
            },
            managers=[
                ("objects", accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "uid",
                    models.CharField(default=accounts.models.genserial, max_length=10),
                ),
                ("title", models.CharField(max_length=100)),
                ("sub_title", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="department/images"
                    ),
                ),
                ("address", models.TextField()),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("ABIA", "ABIA"),
                            ("ABUJA", "ABUJA"),
                            ("ADAMAWA", "ADAMAWA"),
                            ("AKWA IBOM", "AKWA IBOM"),
                            ("ANAMBRA", "ANAMBRA"),
                            ("BAUCHI", "BAUCHI"),
                            ("BAYELSA", "BAYELSA"),
                            ("BENUE", "BENUE"),
                            ("BORNO", "BORNO"),
                            ("CROSS RIVER", "CROSS RIVER"),
                            ("DELTA", "DELTA"),
                            ("EBONYI", "EBONYI"),
                            ("EDO", "EDO"),
                            ("EKITI", "EKITI"),
                            ("ENUGU", "ENUGU"),
                            ("GOMBE", "GOMBE"),
                            ("IMO", "IMO"),
                            ("JIGAWA", "JIGAWA"),
                            ("KADUNA", "KADUNA"),
                            ("KANO", "KANO"),
                            ("KATSINA", "KATSINA"),
                            ("KEBBI", "KEBBI"),
                            ("KOGI", "KOGI"),
                            ("KWARA", "KWARA"),
                            ("LAGOS", "LAGOS"),
                            ("NASSARAWA", "NASSARAWA"),
                            ("NIGER", "NIGER"),
                            ("OGUN", "OGUN"),
                            ("ONDO", "ONDO"),
                            ("OSUN", "OSUN"),
                            ("OYO", "OYO"),
                            ("PLATEAU", "PLATEAU"),
                            ("RIVERS", "RIVERS"),
                            ("SOKOTO", "SOKOTO"),
                            ("TARABA", "TARABA"),
                            ("YOBE", "YOBE"),
                            ("ZAMFARA", "ZAMFARA"),
                            ("NON NIGERIAN", "NON NIGERIAN"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "Pending"),
                            ("blocked", "Blocked"),
                            ("inactive", "Inactive"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "ordering": ("-updated",),
            },
        ),
        migrations.CreateModel(
            name="HistoricalDepartment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("timestamp", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "uid",
                    models.CharField(default=accounts.models.genserial, max_length=10),
                ),
                ("title", models.CharField(max_length=100)),
                ("sub_title", models.CharField(blank=True, max_length=100, null=True)),
                ("image", models.TextField(blank=True, max_length=100, null=True)),
                ("address", models.TextField()),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("ABIA", "ABIA"),
                            ("ABUJA", "ABUJA"),
                            ("ADAMAWA", "ADAMAWA"),
                            ("AKWA IBOM", "AKWA IBOM"),
                            ("ANAMBRA", "ANAMBRA"),
                            ("BAUCHI", "BAUCHI"),
                            ("BAYELSA", "BAYELSA"),
                            ("BENUE", "BENUE"),
                            ("BORNO", "BORNO"),
                            ("CROSS RIVER", "CROSS RIVER"),
                            ("DELTA", "DELTA"),
                            ("EBONYI", "EBONYI"),
                            ("EDO", "EDO"),
                            ("EKITI", "EKITI"),
                            ("ENUGU", "ENUGU"),
                            ("GOMBE", "GOMBE"),
                            ("IMO", "IMO"),
                            ("JIGAWA", "JIGAWA"),
                            ("KADUNA", "KADUNA"),
                            ("KANO", "KANO"),
                            ("KATSINA", "KATSINA"),
                            ("KEBBI", "KEBBI"),
                            ("KOGI", "KOGI"),
                            ("KWARA", "KWARA"),
                            ("LAGOS", "LAGOS"),
                            ("NASSARAWA", "NASSARAWA"),
                            ("NIGER", "NIGER"),
                            ("OGUN", "OGUN"),
                            ("ONDO", "ONDO"),
                            ("OSUN", "OSUN"),
                            ("OYO", "OYO"),
                            ("PLATEAU", "PLATEAU"),
                            ("RIVERS", "RIVERS"),
                            ("SOKOTO", "SOKOTO"),
                            ("TARABA", "TARABA"),
                            ("YOBE", "YOBE"),
                            ("ZAMFARA", "ZAMFARA"),
                            ("NON NIGERIAN", "NON NIGERIAN"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "Pending"),
                            ("blocked", "Blocked"),
                            ("inactive", "Inactive"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Department",
                "verbose_name_plural": "historical Departments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="staffs",
                to="accounts.department",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
